type of ques asked and aproach to solve in diff question , approach for diff type of ques , concept

1.open 2 intellig tab , one for basic to check if part of logic working or not or to find right logic 

2.2nd do actual exam ques in that 

in exam , not much time to think, you should what should be correct exact apprach , no mistake , should know how to solve 
question exaclty 

ask basic and normal ques using this 
--give me some of the complex  matrix  problem to solve in java , which also clear my concept, give me code 

##################################################################################################################

basic concept  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.(Object)d.getClass().getSimpleName() to know variable data type 

2. private Object array [] = new Object [length]; any variable can be of object type 

3. private Object array[] = new Object[length]; and private Object[] array = new Object[length]; both are valid 


4.(Integer)obj;

5.  d = a >>> 2;

5.(int) (Math.random() * 2)


6. Math.random() generates a double between 0.0 (inclusive) and 1.0 (exclusive).

7.math.abs,Math.round, 

8.double num = 4.3;
double ceilValue = Math.ceil(num);  // Output: 5.0
double floorValue = Math.floor(num);

9.indexof(t,index) --also can use from which pos u want . lastindex(t,index), before index 


10.List<String> fruits = List.of("Apple", "Banana", "Cherry"); --List.of() creates an immutable list

11.Arrays.asList(), This method converts an array into a fixed-size list.allows modification 

12. Integer.parseInt(str);  Integer.toString(number); --converting diff datatype to given type or converting string 
to other datatype.

13.String.valueOf() --convert diff type to string and Integer.valueOf()--convert string to other 


14.generic class can be used to have ur own custom collection like keypair or tuple 
its own method, 


15.interface Pair<K, V> { and class KeyValue<K, V> implements Pair<K, V> {


16.(char) (ch - shift)   ,   (char) ('A' + (ch - 'A' + shift) % 26);


17.  map.putIfAbsent(sorted, new ArrayList<>());  map.get(sorted).add(s);  -when grouping same anagrams together 

18. result.append(String.valueOf(currentChar).repeat(count)); when same char need to be repeated 

19.new String(charArray)- to convert char to string . 

20. new String[]{charArray} -- to create string array. String[] strArray = new String[]{"hello", "world"};

char[] letters = new char[]{'a', 'b', 'c'};  sum += (int) ch; // Convert char to ASCII value

   int num = ch - '0'; // Convert char digit to int,  char letter = (char) (num + 96); // Get corresponding letter


21.In Java, ch is a char, and 0 is an int. So, the char is implicitly promoted to an int, leading to the ASCII value of ch being used

22. use ch - 'a' to have array of 26 digit , use (char)(ch+shift) where shift is integer so , its added to ascii value of ch , so shifting char 
ch-'0' when ch is of digit type and u want the actual value of ch in terms of int and storing in int .

23. for digit problem    while (num > 0) {
            int lastDigit = num % 10;
            reversed = reversed * 10 + lastDigit;
            num /= 10;
        }

22. you can either initlize string with null like "" and concatenate or use stringbuilder and then append 

24. one way to check if string or number is palindromic or not is to check itself with its reversal

25.int[] frequency = new int[10]; and frequency[digit]++;, likewise for having count of each char in string , here index
is value of digit and letter, very efficient way to solve these kind of problems.


26.for regular expression ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ 

27. return songs[i].toString(); calling song class tostring method 

28.index of char array or string array or any array can be from some other array with ch[se[i]]..

29. also have  isdupli = true; , maintained which is turned to false , for aray loop 

@ using directly , when inside "" thne use \\. else if regular expression just \.

\\d+(\\.\\d+)? --grouping 2 into 1 , () can be used for grouping 

27. special characters like ., +, *, ?, and others have specific meanings,

28.Inside [], characters are treated as literal characters unless they are specifically reserved for use in a character class (e.g., - for a range).

for - we use \- inside [] too

String regex = "[A-Za-z0-9+._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}"; ,here \\. used instead of just \. since insde "".

29.[A-Za-z0-9.-] is because the hyphen (-) is treated as a literal character when placed at the beginning or end of a character class. It only has special meaning when placed between other characters
 in the class (which is used to define a range)


30. extract digit from string 

 while (matcher.find()) {
            result.append(matcher.group());
        }

replaceAll("[^A-Za-z0-9]"-removing alphanumeric character 

Use \\s+ to match one or more whitespace characters 

31.you want to match the literal parenthesis character ( (or )), you need to escape it with a backslash \\
since it is used as grouping (). 

\w equivalent to  [A-Za-z0-9_]

String regex = "abc|def";  // Match either "abc" or "def"

String regex = "[a-zA-Z0-9]";  // Match any letter or digit -not more than 1 letter or digit, "abc123".matches(regex));  // false

// Regex: [ ,;] means "split on a space, comma, or semicolon"
String[] result = input.split("[ ,;]+");


String reversed = new StringBuilder(cleaned)- can be initialized with some value

public enum Color {
    RED, GREEN, BLUE
}   Color color1 = Color.RED;

 for (Day day : Day.values()) {
            System.out.println(day);
        }


30. reversing digit in string using stringbuilder reversedDigits.insert(0, c); , this insert function 

31.The continue keyword in Java is used to skip the current iteration of a loop and move directly to the next iteration

startsWith (String prefix, int index).  

32. use of left, right counter on both side of string to compare char and then left++, right -- .

33.int frequency[] = new int[ 8 ]; frequency [ 1 + (int) ( Math.random() * 6 ) ] ++; again storing info using index of 
arrays


34.public static <T extends Comparable<T> >
4 T maximum( T x, T y, T z ){

35.class name<T1, T2, ..., Tn> ... {...}

in generic GenericStack < Double >, Double instead of double 

Vector corresponds to ArrayList, but is synchronized (suitable
for accessing from concurrent threads).  EnumMap 


sum (i1, i2, i3, i4); -variable number of parameters of the same type

[a-z&&[def]] intersection (corresponds to [def])

36. \s — a ‘whitespace’ character: [ \t\n\x0B\f\r]

retainAll-It is used to retain only the elements that are present in both the current collection and the specified collection

37. delete and deleteCharAt-method of stringbuilder. 

public void setCharAt (int index, char ch)
 / / replaces a character at the given position

38.charat,tochararray, matches, index, 

39.sometimes in ineer loop , j start from i , and in some cases ,its limit is i like j<i. somestimes , a[i] can be start and 
end of index .

40. if (parts[i].equals(parts[j])) break; --sometimes , u check when condition is negation like in palindrome 


strategy for for loop %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1. simple for loop 

2. when inner loop start with value of i 

3- have another array which is made true and then on this condition , somethong checked or this array made 
true based on some codiiton  

4. use of math.max and min , math.floor ,math.abs 


while loop %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1. index is updated

2, when true is while condition 

3.some counter , on which while condiiton is based 

4. long (n*n) where n is int 

Arrays #########################################&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.dynamic arrays 
with size counter, feeding element to array , suppose array has 100 lenght but adding elem in array based on 
this index counter 





string %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1. use contains to check some symbol 

2. use startwith and endwith to check if substring present in string, can be used in recusrion 

3.charat, matches , 

4.compare 2 string parallel, comparing adjacent character in same string 

if (str1.charAt(i) != str2.charAt(i)) {

5. replace or replaceall 

6.finding count of char in another string, is also , use while(index){increment index and count,till its -1}

7.   String d=String.join(" ",s2[0],s2[1]); System.out.println(d);  result is "pizza hawai"

8.string.join is opp of split where different string is joined by delimeter, which is first arg of string.join 


9. same to do with stringbuilder sb.append(str1).append(" ").append(str2);String result = sb.toString();


10. comparing string length , if 2 string same lenght , its being empty could be in base case 

 if (index > str.length() - 3) { --when finding substring in another string .
            return 0;
        }

11.when comparing 2 string , if to find count of each char , may be comparison of previous one with current index 
and add last string to string.


12, before sorting , string converted into chararray, char[] sArray = s.toCharArray(); Arrays.sort(sArray);

13.StringBuilder has an append(int i) method. This method converts the integer to its string representation and appends it to the StringBuilder.

14.String sortedString = new String(chars);  // Converting back to String --convert char to string 


15.freq[c - '0' + 26]++;  freq[c - 'a']++;// Shift to index range 26-35 for digits  , heere first 26 is covered by letters 
so using this concept very imp . 

16. using             if (main.startsWith(search, i)) { to check if some char exist, can also index help can be taken 

17. sb.append(str1.charAt(i)).append(str2.charAt(i));- can be used to add char in way we want , adding diff logic 


18.  if (parts.length < 2) {- after splitting a line with split, sometimes check its size , sometimes , change datatype 
before storing in appropiate variable .

   for (int i = 1; i < parts.length - 1; i++) {
            name += " " + parts[i];
        }  ##except last part, concatenating everyting into one 


matrix %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.when asked to find avg across each row, divide by no of col and vice versa 

2.if sum across each row, cal sum for each row and then out of inner loop, add into some collection, if index required 
that too.

3.count++; keeping this variable to count no of element in each row, so that can be used to cal avergae , by dividng sum 

4. maxtempmonth = i+1; sometimes to display like month , increment i since i start with 0 but there is no zero month 


recusrion %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1. in base index of array and string should be less than leght of string or array, string should not be empty

2.Base Case: When the array is empty or has only one element left to process

3.  if (index >= arr.length) {return 0;}

4.    if (s.isEmpty() || s.length() == 1) {return s;}

5.the base case often involves reaching the end of both arrays.Both arrays are empty or have reached their end, meaning they are equal. 
Or, if at any point elements differ, return false.

6. if (index == arr1.length && index == arr2.length) {return true;}

7.Base Case: When the substring is empty, or one string is exhausted. 



dynamic programming %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


map %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {
System.out.println(entry.getKey() + ": " + entry.getValue());

1. when need to update key content or want to check if its there , use   if(records.containsKey(name)){. containsKey and 
containsValue. like update best time ,after comparing , like this what we did with array .
         

set %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


list %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



1.String reversedLine = new StringBuilder(line).reverse().toString(); -- directly reversing string using list functio 

2. List.of(1, 2, 3, 4, 5);



class %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

sometimes variable can be of  private Object key; private Object value;

either use like this  for (Sample sample : samples) { or in for loop of (int j=0;......)

1.after split in string array, may be u need to parse some part , create new object out of these variable 

2.when said 2 variable of any data type ,then for example left is of l type, right is of r type.


3. class Tuple<L, R> define and then when calling double squareDiv(Tuple<Integer, Integer> tuple) 

4.in one method , u declare a local variable and then return nothing, in this method ,just add this local into the class

variable like  Movie movie = new Movie(title, genres);
        movies.add(movie); in addmovie method ,in this  movies, is instance of object.


5. second , u return list or map and in this case , map is returned,

6. Pizza Hawaii  10.50 . the first 2 can be stored in string using string.join(" ",stringbiulder or list) 

you can also simply concat first 2 parts[0] + " " + parts[1]; 

7. they ask where they send string line to constructor , and then we have to parse it , create new object, throws 
exception sometimes  or reading a file doing the same thing for each line 



8. when asked that certain list of LinkedList<>() or mentioned in ques, implement in that way when initlizing lik 
numberList = new LinkedList<>(); ,would be same for other cllection 

9. sometimes variable would be stored in diff type like list but in another method , pased as int array , so in that case
call another method to convert list into array 


10. when sid how many trips left, a variable is there which is initlized with some number and on each calling, its value get 
reduced . sometimes interface would be there but you have to think how to use , like in case of ticketing , useticket , means one trip 
so reduce nooftripsleft when >0 , so if some counter , also check when its >0 , and using returntrips method , just return 
this value.

11. Quadrilateral  qlRef  = new Parallelogram(a,b,c);  if ( qlRef instanceof Parallelogram ) 
pgRef = (Parallelogram) qlRef;} instance of is with new paralleogram not the reference type 

12. when we have to throw exception for some variable in class, first throw that exception and then assign value 

 if(age<18)
    {
        throw new IllegalArgumentException("age must be more than 18");
    }
    this.age=age;

13.when new element is asked to get added to array , find first position where its null , then add new object/new value and then
break away from that loop. 

14.when asked to find least or max object  with price or points, use similar logic which u choose for array problem 
,here first elem of array is considered or null like Entry leastLearned = entries[0];


15. in another class calling entry.toString() in tostrig ,to print all content of other class. 

16. sometimes passing this in constructor to intialize some other variables or in some method  supervisor.addAssistant(this);

17. sometimes , need to add elem till certain number like professor can have at most 10 assistant then add till it reaches 9 
 if (assistants.size() < 10) {
            assistants.add(assistant);
        }

18. System.exit(0);  Room: " + (room != null ? room : "N/A")  calling to consider which one to choose 

19. throw new NotComparableException(this);
        }
return Double.compare(this.weight, pet.weight);


20. sometimes in custom exceptin , a message is stored based on if condition and another method which return this message 
 public String getErrMsg() {
        return this.message;
    }

21. collectedPosts.add(posts.get(i)); -adding into another coll after fetching some index 

22. return hasDigit && hasAlpha && hasSpecial; - using diff cond to come to conclusion 

23. either this way for(int i=0;i< learnedwords.length;i++){

      if(learnedwords[i] == null){
         learnedwords[i] = newWord;
         break;
      } or for(int i=0;i< learnedwords.length;i++){

      
         learnedwords[size++] = newWord;
         break;
      }

      if(learnedwords[i] != null){ ##to get count of array 
        count++;
      }


exception %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1.super(message) inside custom exceotion constructor 

inheritance %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


interface  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.interface Container<T>

stack %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.if (token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/"))

2.while (!stack.isEmpty() && temperatures[i] > temperatures[stack.peek()]) {
int index = stack.pop();  comparing elem with top of stack elem, this can be done with 
queue where peek can be used and then normal java cal can be done

{elements[++top] = value;}  return elements[top--];

queue  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.when linkedlist imp , use while(posiiton!=null)

2.when array , then  while (i != free); , use of free, front, rear ,arr[]


3.for circular queue, we have size and capacity . u maintain size++ or -- in enqueue and dequeue to track size of
queue.


linked list %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

1.when finding reverse of linkedlist ,use , prev=null, current and next pointer in(while c!=null)



file operation %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1.use File file = new File("sample.txt"); and then BufferedReader br = new BufferedReader(new FileReader(file)))
 when file is not in same directory 

2. use of try () catch{}

3.  try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) when we want to append file 

4. catch (IOException e) {
            e.printStackTrace();

5.list<String> is given by using path.readalllines- then need to run over loop 
similar approache when after while loop when using bufferreader 
after that parsing , split , new object can be created .

6.then we can work on new list to anaylze data and write or print data as in av,min,max price problem 

7.   reader.close();   writer.close();

8.after getting line of file , then each line will be string and same problem can be asked as asked for string and 
class problem 


9. either BufferedReader b=new BufferedReader(new FileReader(filename)); or first File f= new File(filename);

10.The reason is that Files.write(Path, List<String>) automatically writes each element of the list as a
 separate line in the file. It handles the loop internally, joining the strings with the system's line separator.

11.   } catch (IOException e) {
            e.printStackTrace();
        } or e.getmessage()


